@page "/projects"
@inject ProjectService ProjectService

<div class="container mt-4">
    <h1 class="mb-4">My Projects</h1>
    
    @if (projects == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else if (!projects.Any())
    {
        <div class="alert alert-info" role="alert">
            No projects found. <button type="button" class="btn btn-primary ms-2" @onclick="LoadProjects">Refresh</button>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var project in projects)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(project.ImageUrl))
                        {
                            <img src="@project.ImageUrl" class="card-img-top" alt="@project.Title" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                            </div>
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@project.Title</h5>
                            <p class="card-text flex-grow-1">@project.Description</p>
                            <div class="mt-auto">
                                <button type="button" class="btn btn-outline-primary btn-sm me-2">View Details</button>
                                <button type="button" class="btn btn-outline-secondary btn-sm">Edit</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>    }
    
    <div class="mt-4">
        <button type="button" class="btn btn-success" @onclick="ShowAddForm">Add New Project</button>
    </div>
    
    @if (showAddForm)
    {
        <div class="card mt-4">
            <div class="card-header">
                <h5>Add New Project</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="title" class="form-label">Title</label>
                    <input id="title" class="form-control" @bind="newProject.Title" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea id="description" class="form-control" @bind="newProject.Description" rows="3"></textarea>
                </div>
                <div class="mb-3">
                    <label for="imageUrl" class="form-label">Image URL</label>
                    <input id="imageUrl" class="form-control" @bind="newProject.ImageUrl" />
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-primary" @onclick="AddProject">Add Project</button>
                    <button type="button" class="btn btn-secondary" @onclick="CancelAdd">Cancel</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<Project>? projects;
    private Project newProject = new();
    private bool showAddForm = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        projects = await ProjectService.GetProjectsAsync();
    }

    private void ShowAddForm()
    {
        showAddForm = true;
        newProject = new Project { PortfolioUserId = 1 }; // Assuming user ID 1 for now
    }

    private void CancelAdd()
    {
        showAddForm = false;
        newProject = new();
    }

    private async Task AddProject()
    {
        var result = await ProjectService.AddProjectAsync(newProject);
        if (result != null)
        {
            await LoadProjects(); // Refresh the list
            CancelAdd();
        }
    }
}
